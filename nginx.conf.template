# Custom log format with pool and upstream details
log_format detailed '$remote_addr - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" '
                    'pool=$upstream_http_x_app_pool '
                    'release=$upstream_http_x_release_id '
                    'upstream_status=$upstream_status '
                    'upstream_addr=$upstream_addr '
                    'request_time=$request_time '
                    'upstream_response_time=$upstream_response_time';

access_log /var/log/nginx/access.log detailed;

# Blue/Green upstream configuration with automatic failover
upstream backend {
    server app_${ACTIVE_POOL}:3000 max_fails=1 fail_timeout=5s;

    server app_blue:3000 backup max_fails=1 fail_timeout=5s;
    server app_green:3000 backup max_fails=1 fail_timeout=5s;
}

server {
    listen 80;
    server_name localhost;

    proxy_connect_timeout 2s;

    proxy_send_timeout 3s;

    proxy_read_timeout 3s;

    proxy_next_upstream error timeout http_500 http_502 http_503 http_504;

    proxy_next_upstream_tries 3;

    proxy_next_upstream_timeout 10s;

    proxy_pass_request_headers on;

    location / {
        proxy_pass http://backend;

        proxy_http_version 1.1;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_set_header Connection "";

        proxy_buffering off;

        proxy_cache_bypass $http_upgrade;
    }

    # Health check endpoint for Nginx itself (not forwarded to apps)
    location /nginx-health {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }
}
